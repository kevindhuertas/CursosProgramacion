*{
    font-family: Georgia, 'Times New Roman', Times, serif;
    font-weight: 500;
    font-size: 30 px;
 
}

h2{
    display: inline-block;  /*CAMBIA COMPORTAMINETO DE CAJA*/
    background-color:aqua;  /*color de fondo*/
    padding: 1px 90px 130px 35px;
                            /*padding-bottom: 30px; Espacio  que hay entre el texto y el borde del bloque, etiqueta
                            padding-top: 30px;
                            */
    height: 200px;
    width: 300px;
    box-sizing: border-box;
    text-align: center;
    margin: 20px 10px; /*Distancia que hay de un bloque a otro*/
    border-radius: 40px;
    border: 10px inset grey;
            /* 
             4px tamaño de borde /// solid.. es el ESTILO      /// color 
                                //// inset, dashed, double, grow
             */
    box-shadow: -23px 25px 10px 0 grey;
            /* eje x  /// eje y   /// tamaño de sombreado  // borde (general 0) // color*/
    text-shadow: 2px 20px 3px white,   2px 20px 3px white;
            /* eje x  /// eje y   /// tamaño de sombreado  // color*/
    

}



img{
    border: 10px solid;
    border-color: grey;
}

p{
    width: 190px;
    height: 80px;
}
.sizeCuadrado{
    height: 200px;
    width: 200px;
}

/* -----------------------------------------------------------------------------
    OUTLINE ---> propiedad acortada
        genera un borde pero sin afectar a las cajas
        No ocupa espacio como elemento (borde si)


  POSITION: siginifca que va a afectar el flujo html (orden en el que ponemos los elementos)
        STATIC: no esta posicionado en realidad
        RELATIVE:  el espacio html (bloque) se conserva y se mueve dependiendo de top, button desde el punto de refencia conservado..
        ABSOLUTE: El espacio del bloque se elimina (no conservas=)
                    Top, button.. se mueve con punto de ref. el View Port (la pantalla del navegador)
                    El bloque se ajusta al tamaño del contenido.
        FIXED: Igual que absolute pero se queda Fijado en la pantalla
                - publicidad se queda mientras bajas la web
        STICKY: Mezcla entre relative y Fixed
                Conseva el espacio pero mantiene su posicion cuando topa la pantalla con lo que indiquemos


  Z-INDEX
            Porpiedad que se activa al poner un position
                Elementos en elementos posicionados  en el eje Z
                COMO CAPAS... 
                por depefcto 0 .... z-index: 10;
            Conflictos de hijos y padres
                        <div class:"padre">
                            <div class:"hijo"> bloque 
                            <div>
                        <div>

  DISPLAY
        BLOCK    Dos tipos de bloque (naturales)
        INLINE

        INLINE-BLOCK : actua como bloque pero el tamaño es del contenido o el que queramos (sigue siendo bloque de una linea)
            TABLE:  tabla   
        INLINE-TABLE : tabla en linea 
            LIST-ITEM
            TABLE-CELL
            TABLE-ROW         todas actua como si fuera una tabla
            TABLE-COLUM


        FLEX
        GIRD

        INLINE- FLEX
        INLINE- GIRD

    
    OVERFLOW (scroll) Que hacemos con lo que sobra? (shortjam)
                overflow-x:
                overdflow-y
    
        Propiedades:  
                auto; detecta si sobre contenido y pone scroll en bloque
                scroll; poner obligatiroamente un scroll 
                hidden; ocultar el scroll
                        puede hacer que un relative se quede dentro del bloque y no sobresalga del bloque
    
    FLOAT: (Left, right, None, Inherit)


*/


.caja1{
    width: 200px;
    height: 200px;
    background-color: teal;
    margin: auto;
    outline: 10px solid blue;
    box-sizing: content-box;
}
.caja2{
    width: 200px;
    height: 200px;

    background-color: cornflowerblue;
    margin: auto;


}


 /* POSITION -------------------------------------------------------------- */

 .caja3,.caja4,.caja5{
    width: 200px;
    height: 200px;
    margin: 0;
 }
 .caja3{
     background-color: cornflowerblue;
     position: relative;
     top: 15px;
     left: 30px;
     z-index: 50; /* //Muchas capas pa no tener problemas en posicionar otro luego*/

 }
 .caja4{
     background-color: darkcyan;
     position: relative;  /* se pone atras por defecto */
 }
 .caja5{
     background-color:greenyellow;
    margin: 50px auto;
     /* position: absolute;
     top: 0px; en el View PORT */

 }
 .caja6{
     background-color: brown;
     width: 200px;
     height: 200px;
     position: relative;
     z-index: -1; /* //para cuando son hijos */
    top: -20px;
    left: 20px;
 }

.contenedor{
    position: relative;
    border: 10px solid greenyellow ;
    margin: 50px auto;
    width: 400px;
    height: 400px;
    background-color: cadetblue;
}
.caja7{
    border: 2px dashed crimson ;
    background-color: yellow;
    height: 100px;
    width: 100px;
    
    position: absolute; 
    top: 0;

}
.caja8{
    border: 2px dashed crimson ;
    background-color: yellow;
    height: 100px;
    width: 100px;


    position: absolute; 
    bottom: 0;
    
}
.caja9{
    border: 2px dashed crimson ;
    background-color: yellow;
    height: 100px;
    width: 100px;
    
    position: absolute; 
    bottom: 0;
    right: 0;
    
}
.caja10{
    border: 2px dashed crimson ;
    background-color: yellow;
    height: 100px;
    width: 100px;
    
    position: absolute; 
    top: 0;
    right: 0;
    
}
.caja11{
    border: 2px dashed crimson ;
    background-color: yellow;
    height: 100px;
    width: 100px;
    
    position: absolute; 
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    margin: auto;
    
}
.caja12{
    border: 2px dashed yellowgreen ;
    background-color: yellow;
    box-sizing: border-box;
    width: 180px;
    height: auto;
    
    position: absolute; 
    left: 0;
    right: 0;
    margin: auto;
}

.cajaFixed{
    background-color: tomato;
    width: 100%;
    height: 40px;
    position: fixed;
    top: 0;
    left: 0;
}

.cajaSticky{
    background-color:greenyellow;
    width: 100%;
    height: 40px;
    position: sticky;
    top: 40px;
    left: 0;
    margin: 0;
}

